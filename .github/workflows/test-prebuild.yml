name: test-prebuild
on: [push, pull_request]

jobs:
  prebuild-for-platform:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-16.04]
    container:
        image: ghcr.io/ledgerhq/lib-ledger-core-build-env/lib-ledger-core-build-env:latest
        credentials:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CI_BOT_TOKEN }}
    steps:
      - name: display glibcxx version
        if: runner.os == 'Linux'
        run: lsb_release -a; strings /usr/lib/x86_64-linux-gnu/libstdc++.so.6 | grep -i glib
      - uses: actions/checkout@v1
      - uses: actions/setup-node@master
        with:
          node-version: 12.x
      - uses: actions/setup-python@v1
        with:
          python-version: '3.6.x'
      - name: install
        run: apt-get update; curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash; export NVM_DIR="$HOME/.nvm"; [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"; [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"; nvm install 12;nvm use 12; npm install -g yarn; yarn --frozen-lockfile --ignore-scripts; ls; pwd;
      - name: fetch libcore
        run: yarn preinstall
      - name: config gcc
        if: runner.os == 'Linux'
        run: sudo apt-get install libstdc++6; strings /usr/lib/x86_64-linux-gnu/libstdc++.so.6 | grep -i glib
      - name: prebuild for node 14
        run: npx node-pre-gyp configure rebuild package --target=14.17.0
      - name: clean
        run: npx node-pre-gyp clean
      - name: prebuild for node 12
        run: npx node-pre-gyp configure build package --target=12.16.0
      - name: clean
        run: npx node-pre-gyp clean
      - name: prebuild for electron 11.2
        run: npx node-pre-gyp configure build package --runtime=electron --target=11.2.0 --build-from-source --dist-url=https://electronjs.org/headers
